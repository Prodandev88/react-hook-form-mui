{"version":3,"file":"CheckboxElement-bcbfd255.js","sources":["../../../../packages/rhf-mui/src/CheckboxElement.tsx"],"sourcesContent":["import {\n  Control,\n  Controller,\n  ControllerProps,\n  FieldError,\n  Path,\n} from 'react-hook-form'\nimport {\n  Checkbox,\n  CheckboxProps,\n  FormControl,\n  FormControlLabel,\n  FormControlLabelProps,\n  FormGroup,\n  FormHelperText,\n} from '@mui/material'\nimport {FieldValues} from 'react-hook-form/dist/types/fields'\nimport {useFormError} from './FormErrorProvider'\n\nexport type CheckboxElementProps<T extends FieldValues> = Omit<\n  CheckboxProps,\n  'name'\n> & {\n  validation?: ControllerProps['rules']\n  name: Path<T>\n  parseError?: (error: FieldError) => string\n  label?: FormControlLabelProps['label']\n  helperText?: string\n  control?: Control<T>\n  labelProps?: Omit<FormControlLabelProps, 'label' | 'control'>\n}\n\nexport default function CheckboxElement<TFieldValues extends FieldValues>({\n  name,\n  validation = {},\n  required,\n  parseError,\n  label,\n  control,\n  helperText,\n  labelProps,\n  ...rest\n}: CheckboxElementProps<TFieldValues>): JSX.Element {\n  const errorMsgFn = useFormError()\n  const customErrorFn = parseError || errorMsgFn\n  if (required && !validation.required) {\n    validation.required = 'This field is required'\n  }\n\n  return (\n    <Controller\n      name={name}\n      rules={validation}\n      control={control}\n      render={({field: {value, onChange}, fieldState: {error}}) => {\n        const parsedHelperText = error\n          ? typeof customErrorFn === 'function'\n            ? customErrorFn(error)\n            : error.message\n          : helperText\n        return (\n          <FormControl required={required} error={!!error}>\n            <FormGroup row>\n              <FormControlLabel\n                {...labelProps}\n                label={label || ''}\n                control={\n                  <Checkbox\n                    {...rest}\n                    color={rest.color || 'primary'}\n                    sx={[\n                      ...(Array.isArray(rest.sx) ? rest.sx : [rest.sx]),\n                      {\n                        color: error ? 'error.main' : undefined,\n                      },\n                    ]}\n                    value={value}\n                    checked={!!value}\n                    onChange={(ev) => {\n                      onChange(!value)\n                      if (typeof rest.onChange === 'function') {\n                        rest.onChange(ev, !value)\n                      }\n                    }}\n                  />\n                }\n              />\n            </FormGroup>\n            {parsedHelperText && (\n              <FormHelperText error={!!error}>\n                {parsedHelperText}\n              </FormHelperText>\n            )}\n          </FormControl>\n        )\n      }}\n    />\n  )\n}\n"],"names":["CheckboxElement","name","validation","required","parseError","label","control","helperText","labelProps","rest","errorMsgFn","useFormError","customErrorFn","jsx","Controller","value","onChange","error","parsedHelperText","FormControl","FormGroup","FormControlLabel","Checkbox","ev","FormHelperText"],"mappings":"ySAgCA,SAAwBA,EAAkD,CACxE,KAAAC,EACA,WAAAC,EAAa,CAAC,EACd,SAAAC,EACA,WAAAC,EACA,MAAAC,EACA,QAAAC,EACA,WAAAC,EACA,WAAAC,EACA,GAAGC,CACL,EAAoD,CAClD,MAAMC,EAAaC,IACbC,EAAgBR,GAAcM,EAChC,OAAAP,GAAY,CAACD,EAAW,WAC1BA,EAAW,SAAW,0BAItBW,EAACC,EAAA,CACC,KAAAb,EACA,MAAOC,EACP,QAAAI,EACA,OAAQ,CAAC,CAAC,MAAO,CAAC,MAAAS,EAAO,SAAAC,CAAQ,EAAG,WAAY,CAAC,MAAAC,CAAK,KAAO,CACrD,MAAAC,EAAmBD,EACrB,OAAOL,GAAkB,WACvBA,EAAcK,CAAK,EACnBA,EAAM,QACRV,EACJ,SACGY,EAAY,CAAA,SAAAhB,EAAoB,MAAO,CAAC,CAACc,EACxC,SAAA,CAACJ,EAAAO,EAAA,CAAU,IAAG,GACZ,SAAAP,EAACQ,EAAA,CACE,GAAGb,EACJ,MAAOH,GAAS,GAChB,QACEQ,EAACS,EAAA,CACE,GAAGb,EACJ,MAAOA,EAAK,OAAS,UACrB,GAAI,CACF,GAAI,MAAM,QAAQA,EAAK,EAAE,EAAIA,EAAK,GAAK,CAACA,EAAK,EAAE,EAC/C,CACE,MAAOQ,EAAQ,aAAe,MAChC,CACF,EACA,MAAAF,EACA,QAAS,CAAC,CAACA,EACX,SAAWQ,GAAO,CAChBP,EAAS,CAACD,CAAK,EACX,OAAON,EAAK,UAAa,YACtBA,EAAA,SAASc,EAAI,CAACR,CAAK,CAE5B,CAAA,CACF,CAAA,CAAA,EAGN,EACCG,GACEL,EAAAW,EAAA,CAAe,MAAO,CAAC,CAACP,EACtB,SACHC,EAAA,CAEJ,CAAA,CAAA,CAEJ,CAAA,CAAA,CAGN"}