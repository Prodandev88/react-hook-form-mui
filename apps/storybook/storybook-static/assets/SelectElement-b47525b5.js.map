{"version":3,"file":"SelectElement-b47525b5.js","sources":["../../../../packages/rhf-mui/src/SelectElement.tsx"],"sourcesContent":["import {createElement} from 'react'\nimport {MenuItem, TextField, TextFieldProps} from '@mui/material'\nimport {\n  Control,\n  Controller,\n  ControllerProps,\n  FieldError,\n  Path,\n} from 'react-hook-form'\nimport {FieldValues} from 'react-hook-form/dist/types/fields'\nimport {useFormError} from './FormErrorProvider'\n\nexport type SelectElementProps<T extends FieldValues> = Omit<\n  TextFieldProps,\n  'name' | 'type' | 'onChange'\n> & {\n  validation?: ControllerProps['rules']\n  name: Path<T>\n  options?: {id: string | number; label: string | number}[] | any[]\n  valueKey?: string\n  labelKey?: string\n  type?: 'string' | 'number'\n  parseError?: (error: FieldError) => string\n  objectOnChange?: boolean\n  onChange?: (value: any) => void\n  control?: Control<T>\n}\n\nexport default function SelectElement<TFieldValues extends FieldValues>({\n  name,\n  required,\n  valueKey = 'id',\n  labelKey = 'label',\n  options = [],\n  parseError,\n  type,\n  objectOnChange,\n  validation = {},\n  control,\n  ...rest\n}: SelectElementProps<TFieldValues>): JSX.Element {\n  const errorMsgFn = useFormError()\n  const customErrorFn = parseError || errorMsgFn\n  const isNativeSelect = !!rest.SelectProps?.native\n  const ChildComponent = isNativeSelect ? 'option' : MenuItem\n\n  if (required && !validation.required) {\n    validation.required = 'This field is required'\n  }\n\n  return (\n    <Controller\n      name={name}\n      rules={validation}\n      control={control}\n      render={({\n        field: {onBlur, onChange, value, ref},\n        fieldState: {error},\n      }) => {\n        // handle shrink on number input fields\n        if (type === 'number' && typeof value !== 'undefined') {\n          rest.InputLabelProps = rest.InputLabelProps || {}\n          rest.InputLabelProps.shrink = true\n        }\n\n        value = value?.[valueKey] ?? value // try fetch key value\n\n        return (\n          <TextField\n            {...rest}\n            name={name}\n            value={value ?? ''}\n            onBlur={onBlur}\n            onChange={(event) => {\n              let item: number | string = event.target.value\n              if (type === 'number' && item) {\n                item = Number(item)\n              }\n              onChange(item)\n              if (typeof rest.onChange === 'function') {\n                if (objectOnChange) {\n                  item = options.find((i) => i[valueKey] === item)\n                }\n                rest.onChange(item)\n              }\n            }}\n            select\n            required={required}\n            error={!!error}\n            helperText={\n              error\n                ? typeof customErrorFn === 'function'\n                  ? customErrorFn(error)\n                  : error.message\n                : rest.helperText\n            }\n            inputRef={ref}\n          >\n            {isNativeSelect && <option />}\n            {options.map((item: any) =>\n              createElement(\n                ChildComponent,\n                {\n                  key: `${name}_${item[valueKey]}`,\n                  value: item?.[valueKey] ?? item,\n                },\n                item[labelKey]\n              )\n            )}\n          </TextField>\n        )\n      }}\n    />\n  )\n}\n"],"names":["SelectElement","name","required","valueKey","labelKey","options","parseError","type","objectOnChange","validation","control","rest","errorMsgFn","useFormError","customErrorFn","isNativeSelect","_a","ChildComponent","MenuItem","jsx","Controller","onBlur","onChange","value","ref","error","jsxs","TextField","event","item","i","createElement"],"mappings":"sOA4BA,SAAwBA,EAAgD,CACtE,KAAAC,EACA,SAAAC,EACA,SAAAC,EAAW,KACX,SAAAC,EAAW,QACX,QAAAC,EAAU,CAAC,EACX,WAAAC,EACA,KAAAC,EACA,eAAAC,EACA,WAAAC,EAAa,CAAC,EACd,QAAAC,EACA,GAAGC,CACL,EAAkD,OAChD,MAAMC,EAAaC,IACbC,EAAgBR,GAAcM,EAC9BG,EAAiB,CAAC,GAACC,EAAAL,EAAK,cAAL,MAAAK,EAAkB,QACrCC,EAAiBF,EAAiB,SAAWG,EAE/C,OAAAhB,GAAY,CAACO,EAAW,WAC1BA,EAAW,SAAW,0BAItBU,EAACC,EAAA,CACC,KAAAnB,EACA,MAAOQ,EACP,QAAAC,EACA,OAAQ,CAAC,CACP,MAAO,CAAC,OAAAW,EAAQ,SAAAC,EAAU,MAAAC,EAAO,IAAAC,CAAG,EACpC,WAAY,CAAC,MAAAC,CAAK,CAAA,KAGdlB,IAAS,UAAY,OAAOgB,EAAU,MACnCZ,EAAA,gBAAkBA,EAAK,iBAAmB,CAAA,EAC/CA,EAAK,gBAAgB,OAAS,IAGxBY,GAAAA,GAAA,YAAAA,EAAQpB,KAAaoB,EAG3BG,EAACC,EAAA,CACE,GAAGhB,EACJ,KAAAV,EACA,MAAOsB,GAAS,GAChB,OAAAF,EACA,SAAWO,GAAU,CACf,IAAAC,EAAwBD,EAAM,OAAO,MACrCrB,IAAS,UAAYsB,IACvBA,EAAO,OAAOA,CAAI,GAEpBP,EAASO,CAAI,EACT,OAAOlB,EAAK,UAAa,aACvBH,IACFqB,EAAOxB,EAAQ,KAAMyB,GAAMA,EAAE3B,CAAQ,IAAM0B,CAAI,GAEjDlB,EAAK,SAASkB,CAAI,EAEtB,EACA,OAAM,GACN,SAAA3B,EACA,MAAO,CAAC,CAACuB,EACT,WACEA,EACI,OAAOX,GAAkB,WACvBA,EAAcW,CAAK,EACnBA,EAAM,QACRd,EAAK,WAEX,SAAUa,EAET,SAAA,CAAAT,KAAmB,SAAO,EAAA,EAC1BV,EAAQ,IAAKwB,GACZE,EAAA,cACEd,EACA,CACE,IAAK,GAAGhB,KAAQ4B,EAAK1B,CAAQ,IAC7B,OAAO0B,GAAA,YAAAA,EAAO1B,KAAa0B,CAC7B,EACAA,EAAKzB,CAAQ,CACf,CACF,CAAA,CAAA,CAAA,EAGN,CAAA,CAGN"}